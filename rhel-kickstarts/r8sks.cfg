#Profile Label : RHEL 8 for more hardened environments
#Date Created : 2021-09-08
#Last Modifed : 2021-09-10
#assumption : you are using the RHEL 8.4 iso
#assumption : the vm has at least a 40GB disk drive, grow logical volumes as desired post install
#passwords : for this file the root, grub2 and ladmin user passwords are Pa33w0rd. Please change to suitable production values prior to deployment outside of your lab.
#This kickstart is not overly hardened. Additional hardneing should be invoked with your environments configuration management tools such as Ansible, Salt, Puppet, or Chef.
#To install with fips mode add the fips=1 kernel arguement at install along with inst.ks=$WhereThisFileIs.

text
network --bootproto dhcp --onboot yes --noipv6
cdrom
repo --name="AppStream" --baseurl=file:///run/install/repo/AppStream
lang en_US.UTF-8
keyboard --vckeymap=us --xlayouts='us'
zerombr
clearpart --all
bootloader --location mbr --append="nousb ipv6.disable=1 audit=1 audit_backlog_limit=8192" --iscrypted --password=grub.pbkdf2.sha512.10000.C0379B40AD5EEBAB7DCBAB625C9AC4253BB61D9AF8BD62E017F1A14F011A70A703F42DF2BB0A11A194337C52EEC45ABB6AD49B8D6AEC4B8647AADE9DBCC564B4.6227EFA27018BEC574CF32C47A7BB139095A2B4A68B002E9553C9500AAEDE38A9C56D7C2D0333B7F396D6EEEA41270EAA86ED92865C93A706D03179CA7713B3B
timezone America/New_York
eula --agreed
authselect select sssd with-faillock with-mkhomedir without-nullok
rootpw --iscrypted $6$75v.Iu/m$xcw0IusqJiXa0iNzZi9zHw.WUqYJA8FDLwdXzsHolEQE76kNJyWyY268ajVsAimdnMTIbBp/7X6JzuPpGN1PD0
user --name=ladmin --groups=wheel --gecos="local admin user" --iscrypted --password=$6$75v.Iu/m$xcw0IusqJiXa0iNzZi9zHw.WUqYJA8FDLwdXzsHolEQE76kNJyWyY268ajVsAimdnMTIbBp/7X6JzuPpGN1PD0
selinux --enforcing
reboot
firewall --enabled --ssh
services --enabled="sshd,NetworkManager,chronyd,cockpit.socket"
skipx
firstboot --disabled
clearpart --all --initlabel
part /boot --fstype xfs --size=1000 --label=BOOTFS
part /boot/efi --fstype vfat --size=1000 --label=EFIFS
part pv.1 --size=100 --grow
volgroup sysvg --pesize=4096 pv.1
logvol / --fstype xfs --name=lv_root --vgname=sysvg --size=12000 --label=ROOTFS
logvol /var --fstype xfs --name=lv_var --vgname=sysvg --size=4000 --label=VARFS --fsoptions="nodev"
logvol /var/log --fstype xfs --name=lv_log --vgname=sysvg --size=3000 --label=LOGFS --fsoptions="nodev"
logvol /var/log/audit --fstype xfs --name=lv_audit --vgname=sysvg --size=3000 --label=AUDITFS --fsoptions="nodev"
logvol /home --fstype xfs --name=lv_home --vgname=sysvg --size=4000 --label=HOMEFS --fsoptions="nodev,nosuid"
logvol /opt --fstype xfs --name=lv_opt --vgname=sysvg --size=3000 --label=OPTFS --fsoptions="nodev"
logvol /tmp --fstype xfs --name=lv_tmp --vgname=sysvg --size=4000 --label=TMPFS --fsoptions="nodev,noexec,nosuid"
logvol swap --fstype swap --name=lv_swap --vgname=sysvg --size=1000 --label=SWAPFS

%addon com_redhat_kdump --disable
%end

%packages
vim
aide
audit
lsof
vlock
fipscheck
sysstat
logwatch
yum-utils
scrub
tpm-tools
pinfo
gawk
@guest-agents
@headless-management
-abrt*
-iwl*
-ivtv-firmware
%end

%pre
#!/bin/bash
dd if=/dev/zero of=/dev/{s,v}da bs=4096 count=500
mount -o remount,rw,exec /tmp
%end

%post
####
# import the distribution gpg key for package checking
####
rpm --import /etc/pki/rpm-gpg/*

#### 
##limit root to console
####
echo -e "tty1\ntty2" > /etc/securetty
chmod 700 /root

###
#disable CTRL-ALT-DEL
###
echo "CtrlAltDelBurstAction=none" >>/etc/systemd/system.conf

####
# Set account expiration following inactivity
####
sed -i 's/INACTIVE=-1/INACTIVE=0/' /etc/default/useradd

####
#Password aging
####
cat /etc/login.defs | sed -e 's/^PASS_MAX_DAYS.*[0-9]/PASS_MAX_DAYS 60/g' -e 's/^PASS_MIN_DAYS.*[0-9]/PASS_MIN_DAYS 1/g' -e 's/^PASS_MIN_LEN.*[0-9]/PASS_MIN_LEN 5/g' -e's/^PASS_WARN_AGE.*[0-9]/PASS_WARN_AGE 7/g' >/etc/login.defs.new
echo "FAIL_DELAY 4" >>/etc/login.defs.new
mv /etc/login.defs /etc/login.defs.bak
mv /etc/login.defs.new /etc/login.defs
chmod 644 /etc/login.defs

#####
# Wheel Group Require (sudo)
#####
sed -i -re '/pam_wheel.so use_uid/s/^#//' /etc/pam.d/su
sed -i 's/^#\s*\(%wheel\s*ALL=(ALL)\s*ALL\)/\1/' /etc/sudoers
echo -e "\n## Set timeout for authentiation (5 Minutes)\nDefaults:ALL timestamp_timeout=5\n" >> /etc/sudoers

####
#shell umask settings
####
cat <<EOF > /etc/profile.d/stig-umask.sh
#!/bin/sh
# Non-Privledged Users get 027
# Privledged Users get 022
if [[ \$EUID -ne 0 ]]; then
	umask 027
else
	umask 022
fi
EOF
cat <<EOF > /etc/profile.d/stig-umask.csh
#!/bin/csh
umask 027
EOF
chown root:root /etc/profile.d/stig-umask.{sh,csh}
chmod 555 /etc/profile.d/stig-umask.{sh,csh}

###
#disable idle sessions
###
cat <<EOF > /etc/profile.d/stig-timeout.sh
#!/bin/sh
TMOUT=600
export TMOUT
readonly TMOUT
EOF
cat <<EOF > /etc/profile.d/stig-timeout.csh
#!/bin/csh
set autologout=10
set -r autologout
EOF
chown root:root /etc/profile.d/stig-timeout.{sh,csh}
chmod 755 /etc/profile.d/stig-timeout.{sh,csh}

#####
# Fix cron.allow
#####
echo "root" > /etc/cron.allow
chmod 400 /etc/cron.allow
chown root:root /etc/cron.allow

######
#Setup LIBWRAP
######
cat <<EOF >> /etc/hosts.allow
###
# LOCALHOST (ALL TRAFFIC ALLOWED) DO NOT REMOVE FOLLOWING LINE
ALL: 127.0.0.1
# Allow SSH 
sshd: ALL
EOF
cat <<EOF >> /etc/hosts.deny
###
# Deny All by Default
ALL: ALL
EOF

#######
#preserve systemd journal
#######
mkdir /var/log/journal
chown root:systemd-journal /var/log/journal
chmod 2775 /var/log/journal

####
#Send Journald to syslog
####
echo -e "ForwardToSyslog=yes \nCompress=yes \nStorage=persistent" >> /etc/systemd/journald.conf

###
#All files and directories must have a valid owner.
###
sudo find / -fstype xfs -nouser -print -exec  chown nobody {} \;
sudo find / -fstype xfs -nogroup -print -exec chown :nobody {} \;
cat << EOF |sudo tee -a /etc/cron.daily/file-owner-check.sh
#!/bin/bash
find / -fstype xfs -nouser -print -exec  chown nobody {} \;
find / -fstype xfs -nogroup -print -exec chown :nobody {} \;
EOF
chmod 700 /etc/cron.daily/file-owner-check.sh

####
#console screen lock
####
cat <<EOF > /etc/profile.d/vlock-alias.sh
#!/bin/sh
alias vlock='clear;vlock -a'
EOF
cat <<EOF > /etc/profile.d/vlock-alias.csh
#!/bin/csh
alias vlock 'clear;vlock -a'
EOF
chown root:root /etc/profile.d/vlock-alias.{sh,csh}
chmod 755 /etc/profile.d/vlock-alias.{sh,csh}

######
# Make SELinux Configuration Immutable
######
chattr +i /etc/selinux/config

####
#Disable postfix smtp relaying per STIG RHEL-07-040680
####
postconf -e 'smtpd_client_restrictions = permit_mynetworks,reject'
systemctl reload postfix

####
#Setup firewalld
####
worknet=$(ip route | tail -n 1 |awk '{ print $1 }')
firewall-offline-cmd --zone=work --add-source=$worknet
firewall-offline-cmd --set-default-zone=drop

####
#Firm up SSHD
####
chmod 0600 /etc/ssh/*key
chmod 0640 /etc/ssh/*pub
sed -i 's/PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
sed -i 's/#StrictModes yes/StrictModes yes/' /etc/ssh/sshd_config
sed -i 's/MaxAuthTries 6/MaxAuthTries 3/' /etc/ssh/sshd_config
sed -i 's/#PrintLastLog yes/PrintLastLog yes/' /etc/ssh/sshd_config
sed -i 's/#ClientAliveInterval 0/ClientAliveInterval 300/' /etc/ssh/sshd_config
sed -i 's/#ClientAliveCountMax 3/ClientAliveCountMax 0/' /etc/ssh/sshd_config
sed -i 's/Banner none/Banner \/etc\/issue/' /etc/ssh/sshd_config
systemctl reload sshd

########
##Enable Aide
########
/usr/sbin/aide --init &> /dev/null
cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
/usr/sbin/aide --check
echo -e "05 4 * * * root /usr/sbin/aide --check |/usr/bin/mailx -s \"\$HOSTNAME-\$(date +%F) - aide integrity check\" root@localhost" >>/etc/crontab

#######
# DISA BANNER CONFIGURATION for stig
#######
BANNER_MESSAGE_TEXT='Respect this host. Do not do irresponsible  or malicious things to it.\nBest practice is to maintain this file over the long term with your favorite configuration management software.\nExamples are Ansible, Puppet, Chef, or Salt.\n\n'
echo -e "${BANNER_MESSAGE_TEXT}" > /etc/issue
echo -e "${BANNER_MESSAGE_TEXT}" > /etc/issue.net

#####
# Set Removeable Media and tmp filesystems to noexec
#####
for DEVICE in $(/bin/lsblk | grep ^sr | awk '{ print $1 }'); do
	mkdir -p /mnt/$DEVICE
	echo -e "/dev/$DEVICE\t\t/mnt/$DEVICE\t\tiso9660\tdefaults,ro,noexec,noauto\t0 0" >> /etc/fstab
done
for DEVICE in $(cd /dev;ls *cd* *dvd*); do
	mkdir -p /mnt/$DEVICE
	echo -e "/dev/$DEVICE\t\t/mnt/$DEVICE\t\tiso9660\tdefaults,ro,noexec,noauto\t0 0" >> /etc/fstab
done
echo -e "tmpfs\t\t\t/dev/shm\t\ttmpfs\tnoexec,nosuid,nodev\t\t0 0" >> /etc/fstab
systemctl enable tmp.mount

###
#cleanup
###
cat << EOF >> /root/clean_up.sh
#!/bin/bash
if [ -e /root/anaconda-ks.cfg ]; then
	rm -f /root/*-ks.cfg
fi
sed -i '/clean_up.sh/d' /etc/rc.local
rm -f /root/clean_up.sh
exit 0
EOF

chmod 500 /root/clean_up.sh
chmod u+x /etc/rc.d/rc.local
echo "/root/clean_up.sh" >> /etc/rc.local

%end
