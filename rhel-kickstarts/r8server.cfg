#Profile Label : RHEL9 Server very simplified
#Date Created : 2019-05-16
#Last Modifed : 2019-09-22
#Author : Trae Elmore
#assumption : you are using the standard dvd iso for RHEL8
#assumption : the vm has at least a 40GB disk drive, grow logical volumes as desired post install
#passwords : for this file the root, grub, and ladmin user passwords are Pa33w0rd. Please change to suitable production values prior to deployment outside of your lab.
##This kickstart is only moderately hardened. Hardening choices were made based on the previous RHEL7 DISA STIG, best practices, and common sense. There is no DISA STIG for RHEL 8 nor is there likely to be one anytime sonn. It is a general purpose console install for learning and testing.

install
text
network --bootproto dhcp --onboot yes --noipv6
repo --name="AppStream" --baseurl=file:///run/install/repo/AppStream
cdrom
lang en_US.UTF-8
keyboard --vckeymap=us --xlayouts='us'
zerombr
clearpart --all
bootloader --location mbr --append="nousb audit=1 audit_backlog_limit=8192" --iscrypted --password=grub.pbkdf2.sha512.10000.C0379B40AD5EEBAB7DCBAB625C9AC4253BB61D9AF8BD62E017F1A14F011A70A703F42DF2BB0A11A194337C52EEC45ABB6AD49B8D6AEC4B8647AADE9DBCC564B4.6227EFA27018BEC574CF32C47A7BB139095A2B4A68B002E9553C9500AAEDE38A9C56D7C2D0333B7F396D6EEEA41270EAA86ED92865C93A706D03179CA7713B3B
timezone --utc America/Chicago
eula --agreed
authselect select sssd with-faillock with-mkhomedir without-nullok
rootpw --iscrypted $6$75v.Iu/m$xcw0IusqJiXa0iNzZi9zHw.WUqYJA8FDLwdXzsHolEQE76kNJyWyY268ajVsAimdnMTIbBp/7X6JzuPpGN1PD0
user --name=ladmin --groups=wheel --gecos="local admin user" --iscrypted --password=$6$75v.Iu/m$xcw0IusqJiXa0iNzZi9zHw.WUqYJA8FDLwdXzsHolEQE76kNJyWyY268ajVsAimdnMTIbBp/7X6JzuPpGN1PD0
selinux --enforcing
reboot
firewall --enabled --ssh
syspurpose --role="Red Hat Enterprise Linux Server"
services --enabled="sshd,NetworkManager,chronyd"
skipx
firstboot --disabled
clearpart --all --initlabel
part /boot --fstype xfs --size=2000 --label=BOOTFS
part pv.1 --size=100 --grow
volgroup sysvg --pesize=4096 pv.1
logvol / --fstype xfs --name=lv_root --vgname=sysvg --size=10000 --label=ROOTFS
logvol /usr --fstype xfs --name=lv_usr --vgname=sysvg --size=8000 --label=USRFS --fsoptions="nodev"
logvol /var --fstype xfs --name=lv_var --vgname=sysvg --size=4000 --label=VARFS --fsoptions="nodev"
logvol /var/log --fstype xfs --name=lv_log --vgname=sysvg --size=2000 --label=LOGFS --fsoptions="nodev,noexec,nosuid"
logvol /var/log/audit --fstype xfs --name=lv_audit --vgname=sysvg --size=2000 --label=AUDITFS --fsoptions="nodev,noexec,nosuid"
logvol /home --fstype xfs --name=lv_home --vgname=sysvg --size=4000 --label=HOMEFS --fsoptions="nodev,nosuid"
logvol /opt --fstype xfs --name=lv_opt --vgname=sysvg --size=2000 --label=OPTFS --fsoptions="nodev"
logvol /tmp --fstype xfs --name=lv_tmp --vgname=sysvg --size=4000 --label=TMPFS --fsoptions="nodev,noexec,nosuid"
logvol swap --fstype swap --name=lv_swap --vgname=sysvg --size=1000 --label=SWAPFS

%addon com_redhat_kdump --disable
%end

%addon org_fedora_oscap
       content-type = scap-security-guide
       profile = ospp
%end

%packages
vim
xorg-x11-xauth
dracut-fips
wget
lsof
aide
openssh-clients
audit
fipscheck
vlock
sysstat
vlock
dracut-fips
logwatch
scrub
yum-utils
tpm-tools
pinfo
krb5-workstation
# SCAP Content
openscap
openscap-utils
xml-common
scap-security-guide
#Smart Card
pcsc-lite
ccid
opensc
#remove some things
-abrt*
-avahi*
-iwl*
-ivtv-firmware
%end

%pre
#!/bin/bash
dd if=/dev/zero of=/dev/{s,v}da bs=4096 count=500
mount -o remount,rw,exec /tmp
%end

%post
####
# import the distribution gpg key for package checking
####
rpm --import /etc/pki/rpm-gpg/*

####
#Setup firewalld
####
firewall-offline-cmd --direct --add-rule ipv4 filter IN_public_allow 0 -p tcp -m limit --limit 25/minute --limit-burst 100 -j ACCEPT
worknet=$(ip route | tail -n 1 |awk '{ print $1 }')
firewall-offline-cmd --zone=work --add-source=$worknet
firewall-offline-cmd --set-default-zone=drop

#### 
##limit root to console
####
echo -e "tty1\ntty2" > /etc/securetty
chmod 700 /root

####
#remove unneeded users and idle users
####
userdel uucp
userdel sync
userdel news
userdel games
userdel gopher
userdel shutdown

####
#disable uncommon and blacklisted protocols
####
echo -e "install appletalk /bin/true\ninstall bluetooth /bin/true\ninstall dccp /bin/true\ninstall sctp /bin/true\ninstall rds /bin/true\ninstall tipc /bin/true\ninstall bluetooth /bin/true" |sudo tee -a /etc/modprobe.d/stig.conf
###
#disable uncommon filesystems
###
echo -e "install cramfs /bin/true\ninstall freevxfs /bin/true\ninstall jffs2 /bin/true\ninstall hfs /bin/true\ninstall hfsplus /bin/true\ninstall squashfs /bin/true\ninstall udf /bin/true" |sudo tee -a /etc/modprobe.d/stig.conf
###
#disable users attaching usb storage per DISA and NSA
###
echo "install usb-storage /bin/true" >> /etc/modprobe.d/stig.conf

###
# disable bluetooth service
###
systemctl mask bluetooth.service

###
#disable CTRL-ALT-DEL
###
ln -s /dev/null /etc/systemd/system/ctrl-alt-del.target

####
#shell umask settings
####
cat <<EOF > /etc/profile.d/stig-umask.sh
#!/bin/sh
# Non-Privledged Users get 027
# Privledged Users get 022
if [[ \$EUID -ne 0 ]]; then
	umask 027
else
	umask 022
fi
EOF
cat <<EOF > /etc/profile.d/stig-umask.csh
#!/bin/csh
umask 027
EOF
chown root:root /etc/profile.d/stig-umask.{sh,csh}
chmod 555 /etc/profile.d/stig-umask.{sh,csh}


#####
# Fix cron.allow
#####
echo "root" > /etc/cron.allow
chmod 400 /etc/cron.allow
chown root:root /etc/cron.allow

#####
# Wheel Group Require (sudo)
#####
sed -i -re '/pam_wheel.so use_uid/s/^#//' /etc/pam.d/su
sed -i 's/^#\s*\(%wheel\s*ALL=(ALL)\s*ALL\)/\1/' /etc/sudoers
echo -e "\n## Set timeout for authentiation (5 Minutes)\nDefaults:ALL timestamp_timeout=5\n" >> /etc/sudoers

######
#Setup LIBWRAP
######
cat <<EOF >> /etc/hosts.allow
###
# LOCALHOST (ALL TRAFFIC ALLOWED) DO NOT REMOVE FOLLOWING LINE
ALL: 127.0.0.1
# Allow SSH 
sshd: ALL
EOF
cat <<EOF >> /etc/hosts.deny
###
# Deny All by Default
ALL: ALL
EOF

#######
#preserve systemd journal
#######
mkdir /var/log/journal
chown root:systemd-journal /var/log/journal
chmod 2775 /var/log/journal

###
#All files and directories must have a valid owner.
###
sudo find / -fstype xfs -nouser -print -exec  chown nobody {} \;
sudo find / -fstype xfs -nogroup -print -exec chown :nobody {} \;
cat << EOF |sudo tee -a /etc/cron.daily/file-owner-check.sh
#!/bin/bash
find / -fstype xfs -nouser -print -exec  chown nobody {} \;
find / -fstype xfs -nogroup -print -exec chown :nobody {} \;
EOF
chmod 700 /etc/cron.daily/file-owner-check.sh

###
#disable idle sessions
###
cat <<EOF > /etc/profile.d/stig-timeout.sh
#!/bin/sh
TMOUT=600
export TMOUT
readonly TMOUT
EOF
cat <<EOF > /etc/profile.d/stig-timeout.csh
#!/bin/csh
set autologout=10
set -r autologout
EOF
chown root:root /etc/profile.d/stig-timeout.{sh,csh}
chmod 755 /etc/profile.d/stig-timeout.{sh,csh}

####
#console screen lock
####
cat <<EOF > /etc/profile.d/vlock-alias.sh
#!/bin/sh
alias vlock='clear;vlock -a'
EOF
cat <<EOF > /etc/profile.d/vlock-alias.csh
#!/bin/csh
alias vlock 'clear;vlock -a'
EOF
chown root:root /etc/profile.d/vlock-alias.{sh,csh}
chmod 755 /etc/profile.d/vlock-alias.{sh,csh}
####
# Configure password policy
####
cat /etc/security/pwquality.conf | sed -e 's/^#.*difok.*=.*[0-9]/difok = 8/g' -e 's/^#.*minclass.*=.*[0-9]/minclass = 4/g' -e 's/^#.*minlen.*=.*[0-9]*/minlen = 15/g' -e 's/^#.*dcredit.*=.*[0-9]/dcredit = -1/g' -e 's/^#.*ucredit.*=.*[0-9]/ucredit = -1/g' -e 's/^#.*lcredit.*=.*[0-9]/lcredit = -1/g' -e 's/^#.*ocredit.*=.*[0-9]/ocredit = -1/g' -e 's/^#.*maxrepeat.*=.*[0-9]*/maxrepeat = 4/g' -e 's/^#.*maxclassrepeat.*=.*[0-9]*/maxclassrepeat = 4/g' > /etc/security/pwquality.conf.new
mv /etc/security/pwquality.conf /etc/security/pwquality.conf.bak
mv /etc/security/pwquality.conf.new /etc/security/pwquality.conf
chmod 644 /etc/security/pwquality.conf

cat /etc/login.defs | sed -e 's/^PASS_MAX_DAYS.*[0-9]/PASS_MAX_DAYS 60/g' -e 's/^PASS_MIN_DAYS.*[0-9]/PASS_MIN_DAYS 1/g' -e 's/^PASS_MIN_LEN.*[0-9]/PASS_MIN_LEN 5/g' -e's/^PASS_WARN_AGE.*[0-9]/PASS_WARN_AGE 7/g' >/etc/login.defs.new
echo "FAIL_DELAY 4" >>/etc/login.defs.new
mv /etc/login.defs /etc/login.defs.bak
mv /etc/login.defs.new /etc/login.defs
chmod 644 /etc/login.defs

####
# Set account expiration following inactivity
####
sed -i 's/INACTIVE=-1/INACTIVE=0/' /etc/default/useradd

######
# Make SELinux Configuration Immutable
######
chattr +i /etc/selinux/config

########
##Enable Aide
########
/usr/bin/sed -i -e 's/^FIPSR.*/FIPSR = p+i+n+u+g+s+m+c+acl+selinux+xattrs+sha256/' -e 's/^NORMAL.*/NORMAL = FIPSR+sha512/' /etc/aide.conf
/usr/sbin/aide --init &> /dev/null
cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
/usr/sbin/aide --check
echo -e "05 4 * * * root /usr/sbin/aide --check |/usr/bin/mailx -s \"\$HOSTNAME-\$(date +%F) - aide integrity check\" root@localhost" >>/etc/crontab

####
#Disable postfix smtp relaying per STIG RHEL-07-040680
####
postconf -e 'smtpd_client_restrictions = permit_mynetworks,reject'
systemctl reload postfix

####
#Setup firewalld
####
firewall-offline-cmd --direct --add-rule ipv4 filter IN_public_allow 0 -p tcp -m limit --limit 25/minute --limit-burst 100 -j ACCEPT
worknet=$(ip route | tail -n 1 |awk '{ print $1 }')
firewall-offline-cmd --zone=work --add-source=$worknet
firewall-offline-cmd --set-default-zone=drop

####
#enable kernel fips mode
####
echo "PRELINKING=no" > /etc/sysconfig/prelink
prelink -u -a
dracut -v -f
BOOT=UUID=$(findmnt -no uuid LABEL=BOOTFS)
sed -i 's/nousb/boot='"${BOOT}"' fips=1 ipv6.disable=1/' /etc/default/grub
if [ -e /sys/firmware/efi ]; then
  grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg
  chmod 600 /boot/efi/EFI/redhat/grub.cfg
else
  grub2-mkconfig -o /boot/grub2/grub.cfg
  chmod 600 /boot/grub2/grub.cfg
fi

#####
# Set Removeable Media and tmp filesystems to noexec
#####
for DEVICE in $(/bin/lsblk | grep ^sr | awk '{ print $1 }'); do
	mkdir -p /mnt/$DEVICE
	echo -e "/dev/$DEVICE\t\t/mnt/$DEVICE\t\tiso9660\tdefaults,ro,noexec,noauto\t0 0" >> /etc/fstab
done
for DEVICE in $(cd /dev;ls *cd* *dvd*); do
	mkdir -p /mnt/$DEVICE
	echo -e "/dev/$DEVICE\t\t/mnt/$DEVICE\t\tiso9660\tdefaults,ro,noexec,noauto\t0 0" >> /etc/fstab
done
echo -e "tmpfs\t\t\t/dev/shm\t\ttmpfs\tnoexec,nosuid,nodev\t\t0 0" >> /etc/fstab
systemctl enable tmp.mount

#######
# DISA BANNER CONFIGURATION for stig
#######
BANNER_MESSAGE_TEXT='You are accessing a U.S. Government (USG) Information System (IS) that is \nprovided for USG-authorized use only. By using this IS (which includes any \ndevice attached to this IS), you consent to the following conditions:\n\n-The USG routinely intercepts and monitors communications on this IS for \npurposes including, but not limited to, penetration testing, COMSEC monitoring, \nnetwork operations and defense, personnel misconduct (PM), law enforcement \n(LE), and counterintelligence (CI) investigations.\n\n-At any time, the USG may inspect and seize data stored on this IS.\n\n-Communications using, or data stored on, this IS are not private, are subject \nto routine monitoring, interception, and search, and may be disclosed or used \nfor any USG-authorized purpose.\n\n-This IS includes security measures (e.g., authentication and access controls) \nto protect USG interests -- not for your personal benefit or privacy.\n\n-Notwithstanding the above, using this IS does not constitute consent to PM, LE \nor CI investigative searching or monitoring of the content of privileged \ncommunications, or work product, related to personal representation or services \nby attorneys, psychotherapists, or clergy, and their assistants. Such \ncommunications and work product are private and confidential. See User \nAgreement for details.\n\n'
echo -e "${BANNER_MESSAGE_TEXT}" > /etc/issue
echo -e "${BANNER_MESSAGE_TEXT}" > /etc/issue.net

###
# SCAP Complience Report
###
cat << EOF >> /root/scap_generate_report.sh
#!/bin/bash
######
# Create SSG Complience Report
oscap xccdf eval --fetch-remote-resources --profile ospp --results \$(hostname)-scap-report-\$(date +%F).xml --report \$(hostname)-scap-report-\$(date +%Y%m%d).html --cpe /usr/share/xml/scap/ssg/content/ssg-rhel8-cpe-dictionary.xml /usr/share/xml/scap/ssg/content/ssg-rhel8-xccdf.xml
exit 0
EOF
chmod 500 /root/scap_generate_report.sh

###
#cleanup
###
cat << EOF >> /root/clean_up.sh
#!/bin/bash
if [ -e /root/anaconda-ks.cfg ]; then
	rm -f /root/*-ks.cfg
fi
sed -i '/clean_up.sh/d' /etc/rc.local
rm -f /root/clean_up.sh
exit 0
EOF

chmod 500 /root/clean_up.sh
chmod u+x /etc/rc.d/rc.local
echo "/root/clean_up.sh" >> /etc/rc.local

%end

